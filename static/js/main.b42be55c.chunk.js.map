{"version":3,"sources":["ui/components/superComponents/superInput/SuperInputText.module.css","ui/components/superComponents/superButton/SuperButton.module.css","ui/components/superComponents/superCheckbox/SuperCheckbox.module.css","ui/navbar/Navbar.tsx","ui/login/Login.tsx","ui/profile/Profile.tsx","ui/registration/password/PasswordNew.tsx","ui/components/superComponents/superInput/SuperInput.tsx","ui/components/superComponents/superButton/SuperButton.tsx","ui/components/superComponents/superCheckbox/SuperCheckbox.tsx","ui/components/superComponents/SuperComponents.tsx","ui/registration/Regist.tsx","ui/registration/password/PasswordRecovery.tsx","App.tsx","reportWebVitals.ts","bll/ProfileReducer.ts","bll/LoginReducer.ts","bll/SuperComponentsReducer.ts","bll/RegistReducer.ts","bll/PasswordRecoveryReducer.ts","bll/PasswordNewReducer.ts","bll/store.ts","index.tsx","ui/navbar/Navbar.module.css"],"names":["module","exports","Navbar","className","classes","nav","item","to","Login","Profile","PasswordNew","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","console","log","e","currentTarget","value","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperComponents","SuperInput","Regist","PasswordRecovery","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","rootReducer","combineReducers","profile","state","action","login","components","registry","passRecovery","passNew","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b42be55c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1cK9P\",\"errorInput\":\"SuperInputText_errorInput__1nC1t\",\"error\":\"SuperInputText_error__33olG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2-2FC\",\"red\":\"SuperButton_red__2kt2j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__aSvHA\",\"spanClassName\":\"SuperCheckbox_spanClassName__34CYW\"};","import React from 'react';\r\nimport classes from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return <nav className={classes.nav}>\r\n        <div className={classes.item}>\r\n            <NavLink to='/profile'>Profile</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to='/login'>Login</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to='/regist'>Registry</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to='/passwordRecovery'>PasswordRecovery</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to='/passwordNew'>PasswordNew</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to='/superComponents'>SuperComponents</NavLink>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nexport const Login = () => {\r\n  return <div>\r\n      Login\r\n  </div>\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Profile = () => {\r\n  return <div>\r\n      Profile\r\n  </div>\r\n}\r\n","import React from \"react\";\r\n\r\nexport const PasswordNew = () => {\r\n  return <div>\r\n      PasswordNew\r\n  </div>\r\n}\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void\r\n  onEnter?: () => void\r\n  error?: string\r\n  spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n      type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n      onChange, onChangeText,\r\n      onKeyPress, onEnter,\r\n      error,\r\n      className, spanClassName,\r\n\r\n      ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange // если есть пропс onChange\r\n    && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n    onChangeText && onChangeText(e.currentTarget.value)\r\n  }\r\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    onKeyPress && onKeyPress(e);\r\n\r\n    onEnter // если есть пропс onEnter\r\n    && e.key === 'Enter' // и если нажата кнопка Enter\r\n    && onEnter() // то вызвать его\r\n  }\r\n\r\n  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n  const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n  console.log(finalInputClassName)\r\n  return (\r\n      <>\r\n        <input\r\n            type={'text'}\r\n            onChange={onChangeCallback}\r\n            onKeyPress={onKeyPressCallback}\r\n            className={finalInputClassName}\r\n\r\n            {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n        />\r\n        {error && <span className={finalSpanClassName}>{error}</span>}\r\n      </>\r\n  )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)// сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from \"react\";\r\nimport SuperInputText from \"./superInput/SuperInput\";\r\nimport SuperButton from \"./superButton/SuperButton\";\r\nimport SuperCheckbox from \"./superCheckbox/SuperCheckbox\";\r\n\r\nexport const SuperComponents = () => {\r\n  return <div>\r\n    <div>\r\n      <SuperInputText/>\r\n    </div>\r\n    <div>\r\n      <SuperButton> Button </SuperButton>\r\n    </div>\r\n    <div>\r\n      <SuperCheckbox/>\r\n    </div>\r\n  </div>\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Regist = () => {debugger\r\n  return <div>\r\n      Regist\r\n  </div>\r\n}\r\n","import React from \"react\";\r\n\r\nexport const PasswordRecovery = () => {\r\n  return <div>\r\n      PasswordRecovery\r\n  </div>\r\n}\r\n","import React from 'react';\nimport {Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport Navbar from \"./ui/navbar/Navbar\";\nimport {Login} from \"./ui/login/Login\";\nimport {Profile} from \"./ui/profile/Profile\";\nimport {PasswordNew} from \"./ui/registration/password/PasswordNew\";\nimport {SuperComponents} from \"./ui/components/superComponents/SuperComponents\";\nimport {Regist} from \"./ui/registration/Regist\";\nimport {PasswordRecovery} from \"./ui/registration/password/PasswordRecovery\";\n\nfunction App() {debugger\n\n    return (\n        <div>\n            <Navbar/>\n\n            <Routes>\n                <Route path='/' element={<div>Empty</div>} />\n                <Route path='/login' element={<Login/>} />\n                <Route path='/profile' element={<Profile/>} />\n                <Route path='/regist' element={<Regist/>} />\n                <Route path='/passwordRecovery' element={<PasswordRecovery/>} />\n                <Route path='/passwordNew' element={<PasswordNew/>} />\n                <Route path='/superComponents' element={<SuperComponents/>} />\n            </Routes>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const ProfileReducer = (state = initState, action: any): InitStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const LoginReducer = (state = initState, action: any): InitStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const SuperComponentsReducer = (state = initState, action: any): InitStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const RegistReducer = (state = initState, action: any): InitStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const PasswordRecoveryReducer = (state = initState, action: any): InitStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const PasswordNewReducer = (state = initState, action: any): InitStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {ProfileReducer} from \"./ProfileReducer\";\r\nimport {LoginReducer} from \"./LoginReducer\";\r\nimport {SuperComponentsReducer} from \"./SuperComponentsReducer\";\r\nimport {RegistReducer} from \"./RegistReducer\";\r\nimport {PasswordRecoveryReducer} from \"./PasswordRecoveryReducer\";\r\nimport {PasswordNewReducer} from \"./PasswordNewReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    profile: ProfileReducer,\r\n    login: LoginReducer,\r\n    components: SuperComponentsReducer,\r\n    registry: RegistReducer,\r\n    passRecovery: PasswordRecoveryReducer,\r\n    passNew: PasswordNewReducer,\r\n})\r\n\r\n// const store: Store<AppRootStoreType> = createStore(rootReducer);\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStoreType = ReturnType<typeof rootReducer>\r\n\r\nexport default store;\r\n//@ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./bll/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3uhi0\",\"item\":\"Navbar_item__3H7dy\",\"activeLink\":\"Navbar_activeLink__2aZ2j\"};"],"sourceRoot":""}